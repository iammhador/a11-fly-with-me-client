//! Bonus Requirements :
1. Your Readme file for the client-side repo should have details about your project's features and functionalities in bullet points(at least five bullet points) and your live link. Adding a meaningful readme file for the server-side repo is optional.

2. At least 15 meaningful GitHub commits for the client-side and 8 meaningful commits for the server-side repository.

* 3. Your code should be clean and organized. Comments should be added where necessary 

4. The title of the page will change with the page you visit. It should not be the same for every route

* 5. Add a meaningful favicon

6. Add a spinner on the services page, and the login and register page. If data is loading, a spinner will be displayed.

7. use the Environment Environment variable on both the client (firebase config) and server-side (mongodb credentials, Access token secret). Use .gitignore file on the server side.

8.Implement the basic version of the JWT token for email/password-based authentication. Upon login, you will create a jwt token and store it on the client side, and for the "My reviews" page, you will send the token and verify the user. Implementing 401 and 403 is optional.

9. In the "My reviews" page, clicking the edit review button/icon shows that review in a modal/in a new route and lets the user update it.

10. Simple challenge In the service details page, sort the reviews in a descending order by inserting time(you have to keep the inserting time when you add a review, you can do it with the Date object, or you can explore MongoDB documentation). You will have to implement this code on the server side.